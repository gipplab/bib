
@inproceedings{TottlebenISG21,
	location = {New York, {NY}, {USA}},
	title = {Academic Storage Cluster},
	abstract = {Decentralized storage is still rarely used in an academic and educational environment, although it offers better availability than conventional systems. It still happens that data is not available at a certain time due to heavy load or maintenance on the university servers. In such cases, a decentralized solution can help keep the data available and distribute the load among several peers. In our experiment, we created a cluster of containers in Docker to evaluate a private {IPFS} cluster for an academic data store focusing on availability, {GET}/{PUT} performance, and storage needs. As sample data, we used {PDF} files to analyze the data transport in our peer-to-peer network with Wireshark. We found that a bandwidth of at least 100 kbps is required for {IPFS} to function but recommend at least 1000 kbps for smooth operation. Also, the hard disk and memory size should be adapted to the data. Other limiting factors such as {CPU} processing power and delay in the internet connection did not affect the operation of the {IPFS} cluster.},
	booktitle = {Proceedings of the {ACM}/{IEEE} joint conference on digital libraries in 2021},
	publisher = {Association for Computing Machinery},
	author = {von Tottleben, Alexander and Ihle, Cornelius and Schubotz, Moritz and Gipp, Bela},
	date = {2021},
	keywords = {!ci, !ci\_author, decentralized\_open\_science, ⛔ No {DOI} found},
}

@incollection{DeifussFabianISG21,
	title = {procd: A Privacy-preserving Robust Implementation to Discover Contacts in Social Networks},
	url = {https://epub.uni-regensburg.de/id/eprint/44954},
	shorttitle = {procd},
	abstract = {Current instant messengers store the users’ phone book contacts typically unencrypted or hashed on a central server. In case of a server’s corruption, all contacts are either directly available in plaintext or can be unmasked using a simple dictionary attack. To solve this problem, we present procd [pʁoːst], a python implementation for privacy preserving contact discovery. procd is a trustless solution that requires neither plaintext numbers nor hashes of single phone numbers to retrieve contacts. Instead, we transfer hashed combinations of multiple phone numbers, which increases the effort for dictionary attacks to an unfeasible level using today’s hardware.},
	publisher = {Universität Regensburg},
	author = {Deifuß, Fabian and Ihle, Cornelius and Schubotz, Moritz and Gipp, Bela},
	urldate = {2021-07-07},
	date = {2021},
	doi = {10.5283/EPUB.44954},
	keywords = {!ci, !ci\_author, decentralized\_open\_science},
}

@inproceedings{IhleSMG20,
	location = {New York, {NY}, {USA}},
	title = {A first step towards content protecting plagiarism detection},
	isbn = {978-1-4503-7585-6},
	url = {https://doi.org/10.1145/3383583.3398620},
	doi = {10.1145/3383583.3398620},
	series = {{JCDL} '20},
	abstract = {Plagiarism detection systems are essential tools for safeguarding academic and educational integrity. However, today's systems require disclosing the full content of the input documents and the document collection to which the input documents are compared. Moreover, the systems are centralized and under the control of individual, typically commercial providers. This situation raises procedural and legal concerns regarding the confidentiality of sensitive data, which can limit or prohibit the use of plagiarism detection services. To eliminate these weaknesses of current systems, we seek to devise a plagiarism detection approach that does not require a centralized provider nor exposing any content as cleartext. This paper presents the initial results of our research. Specifically, we employ Private Set Intersection to devise a content-protecting variant of the citation-based similarity measure Bibliographic Coupling implemented in our plagiarism detection system {HyPlag}. Our evaluation shows that the content-protecting method achieves the same detection effectiveness as the original method while making common attacks to disclose the protected content practically infeasible. Our future work will extend this successful proof-of-concept by devising plagiarism detection methods that can analyze the entire content of documents without disclosing it as cleartext.},
	pages = {341--344},
	booktitle = {Proceedings of the {ACM}/{IEEE} joint conference on digital libraries in 2020},
	publisher = {Association for Computing Machinery},
	author = {Ihle, Cornelius and Schubotz, Moritz and Meuschke, Norman and Gipp, Bela},
	date = {2020},
	note = {tex.ids: {IhleSMG}20a
tex.oldkey: Ihle2020
tex.topic: pd},
	keywords = {!bg, !bg\_author, !ci, !ci\_author, !ms, !ms\_author, !nm, !nm\_author, \#nosource, decentralized\_open\_science, jabref\_imp1\_clean, plagiarism detection, private computation, similarity detection},
}

@inproceedings{WortnerSLG19,
	location = {Urbana-Champaign, {IL}, {USA}},
	title = {Securing the Integrity of Time Series Data in Open Science Projects Using Blockchain-Based Trusted Timestamping},
	booktitle = {Proceedings of the Workshop on Web Archiving and Digital Libraries ({WADL}) co-located with the Annual International {ACM}/{IEEE} Joint Conference on Digital Libraries ({JCDL})},
	author = {Wortner, Patrick and Schubotz, Moritz and Breitinger, Corinna and Leible, Stephan and Gipp, Bela},
	date = {2019-06},
	note = {tex.oldkey: Wortner2019
tex.preprint: https://www.gipp.com/wp-content/papercite-data/pdf/wortner2019.pdf
tex.topic: blockchain},
	keywords = {!bg, !bg\_author, !bg\_preprint, !ms, !ms\_author, !ms\_cv, !ms\_preprint, decentralized\_open\_science, jabref\_imp2, old\_tex\_field\_preprint},
}

@incollection{IhleS19,
	location = {Cham},
	title = {Smart Contract-Based Role Management on the Blockchain},
	volume = {339},
	isbn = {978-3-030-04848-8 978-3-030-04849-5},
	url = {http://link.springer.com/10.1007/978-3-030-04849-5_30},
	pages = {335--343},
	booktitle = {Business Information Systems Workshops},
	publisher = {Springer International Publishing},
	author = {Ihle, Cornelius and Sanchez, Omar},
	editor = {Abramowicz, Witold and Paschke, Adrian},
	urldate = {2021-02-12},
	date = {2019},
	doi = {10.1007/978-3-030-04849-5_30},
	note = {Series Title: Lecture Notes in Business Information Processing},
	keywords = {!ci, decentralized\_open\_science, rbac},
}

@article{TrautweinSG,
	title = {Introducing Peer Copy - A Fully Decentralized Peer-to-Peer File Transfer Tool},
	series = {{IFIP} '21},
	abstract = {Peer Copy is a decentralized, peer-to-peer ﬁle transfer tool based on libp2p. It allows any two parties that are either both on the same network or connected via the internet to transfer the contents of a ﬁle based on a particular sequence of words. Peer discovery happens via multicast {DNS} if both peers are on the same network or via entries in the distributed hash table ({DHT}) of the {InterPlanetary} File-System ({IPFS}) if both peers are connected across network boundaries. As soon as a connection is established, the word sequence is used as the input for a password-authenticated key exchange ({PAKE}) to derive a strong session key. This session key authenticates the peers and encrypts any subsequent communication. It is found that the decentralized approach to peer-to-peer ﬁle transfer can keep up with established centralized tools while eliminating the reliance on centralized service providers.},
	pages = {2},
	author = {Trautwein, D and Schubotz, M and Gipp, B},
	langid = {english},
	keywords = {!dt, decentralized\_open\_science, ⛔ No {DOI} found},
}
